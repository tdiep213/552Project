          // branchTest
          //
          // Test program for WISC-SP06 architecture
          // for jump and branch instructions
          // for the single-cycle implementation.
          //
          // CS/ECE 552, Spring 2006
          // Andy Phelps  24 March 2006
          //
          
0000 c000 lbi r0, U.Label3
0002 904e slbi r0, L.Label3 // r0 contains address of ".Label3"
0004 c7ff lbi r7, -1        // r7 = 0xffff
0006 c600 lbi r6, 0         // r6 = 0x0000
          
0008 200a j .Label1         // jump to .Label1
          
000a 0000 halt
000c 0000 halt
000e 0000 halt
0010 0000 halt
0012 0000 halt
          
0014      .Label1:
          
0014 4720 addi r1, r7, 0    // r1 = 0xffff
0016 3002 jal .Label2       // r7 = .RetAddr
0018      .RetAddr:
0018 0000 halt
          
001a      .Label2:
          
001a 47a0 addi r5, r7, 0    // r5 = .RetAddr
001c 4077 addi r3, r0, -9   // r3 = .Label3-9
001e 3b09 jalr r3, 9        // jump to .Label3; r7 = RetAddr2
0020      .RetAddr2:
0020 9e21 stu r1, r6, 1     // This is NOT executed
0022 0000 halt
0024 0000 halt
0026 0000 halt
0028 0000 halt
002a 0000 halt
002c 0000 halt
002e 0000 halt
0030 0000 halt
          
0032      .Label4:
0032 c000 lbi r0, 0         // r0 = 0x0000
0034 c101 lbi r1, 1         // r1 = 0x0001
0036 c2ff lbi r2, -1        // r2 = 0xffff
          
0038 602c beqz r0, .Label5
          
003a 0000 halt
003c 0000 halt
003e 0000 halt
0040 0000 halt
          
0042      .Label8:
0042 7140 bltz r1, .Death
0044 613e beqz r1, .Death
0046 7842 bgez r0, .Label9
0048 0000 halt
004a 0000 halt
004c 0000 halt
          
004e      .Label3:
          
004e c400 lbi r4, U.Label4
0050 9432 slbi r4, L.Label4  // r4 = .Label4
0052 c09c lbi r0, -100
0054 dc10 add r4, r4, r0     // r4 = .Label4-100
0056 ddf4 add r5, r5, r7     // r5 = .RetAddr + .RetAddr2
0058 c755 lbi r7, 0x55       // r7 = 0x0055
005a 2c64 jr r4, 100         // jump backward to Label4; r7 unchanged
005c 47ef addi r7, r7, 15    // This is NOT executed
005e 0000 halt
0060 0000 halt
0062 0000 halt
0064 0000 halt
          
0066      .Label5:
0066 681c bnez r0, .Death
0068 46c2 addi r6, r6, 2     // r6 = 0x0002
006a 6904 bnez r1, .Label6
006c 0000 halt
006e 0000 halt
0070      .Label6:
0070 6a0a bnez r2, .Label7
0072 0000 halt
0074 0000 halt
0076 0000 halt
0078 0000 halt
007a 0000 halt
007c      .Label7:
007c 7a06 bgez r2, .Death
007e 72c2 bltz r2, .Label8
0080 0000 halt
0082 0000 halt
          
0084      .Death:
0084 c6ff lbi r6, -1  // Should never make it here
0086 0000 halt
0088 0000 halt
          
008a      .Label9:
008a 46c4 addi r6, r6, 4     // r6 = 0x0006
          
          // WE MADE IT!
008c 0000 halt
          // We should have:
          //     r0 = 0x0000
          //     r1 = 0x0001
          //     r2 = 0xffff
          //     r3 = .Label3-9
          //     r4 = .Label4-100
          //     r5 = .RetAddr+.RetAddr2
          //     r6 = 0x0006
          //     r7 = 0x0055
          
008e 0000 halt
0090 0000 halt
0092 0000 halt
0094 0000 halt
0096 0000 halt
0098 0000 halt
009a 0000 halt
