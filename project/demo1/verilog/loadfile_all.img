Reading line: // branchTest
Reading line: //
Reading line: // Test program for WISC-SP06 architecture
Reading line: // for jump and branch instructions
Reading line: // for the single-cycle implementation.
Reading line: //
Reading line: // CS/ECE 552, Spring 2006
Reading line: // Andy Phelps  24 March 2006
Reading line: //
Reading line: 
Reading line: lbi r0, U.Label3
Reading line: slbi r0, L.Label3 // r0 contains address of ".Label3"
Reading line: lbi r7, -1        // r7 = 0xffff
Reading line: lbi r6, 0         // r6 = 0x0000
Reading line: 
Reading line: j .Label1         // jump to .Label1
Reading line: 
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Label1:
Reading line: 
Reading line: addi r1, r7, 0    // r1 = 0xffff
Reading line: jal .Label2       // r7 = .RetAddr
Reading line: .RetAddr:
Reading line: halt
Reading line: 
Reading line: .Label2:
Reading line: 
Reading line: addi r5, r7, 0    // r5 = .RetAddr
Reading line: addi r3, r0, -9   // r3 = .Label3-9
Reading line: jalr r3, 9        // jump to .Label3; r7 = RetAddr2
Reading line: .RetAddr2:
Reading line: stu r1, r6, 1     // This is NOT executed
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Label4:
Reading line: lbi r0, 0         // r0 = 0x0000
Reading line: lbi r1, 1         // r1 = 0x0001
Reading line: lbi r2, -1        // r2 = 0xffff
Reading line: 
Reading line: beqz r0, .Label5
Reading line: 
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Label8:
Reading line: bltz r1, .Death
Reading line: beqz r1, .Death
Reading line: bgez r0, .Label9
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Label3:
Reading line: 
Reading line: lbi r4, U.Label4
Reading line: slbi r4, L.Label4  // r4 = .Label4
Reading line: lbi r0, -100
Reading line: add r4, r4, r0     // r4 = .Label4-100
Reading line: add r5, r5, r7     // r5 = .RetAddr + .RetAddr2
Reading line: lbi r7, 0x55       // r7 = 0x0055
Reading line: jr r4, 100         // jump backward to Label4; r7 unchanged
Reading line: addi r7, r7, 15    // This is NOT executed
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Label5:
Reading line: bnez r0, .Death
Reading line: addi r6, r6, 2     // r6 = 0x0002
Reading line: bnez r1, .Label6
Reading line: halt
Reading line: halt
Reading line: .Label6:
Reading line: bnez r2, .Label7
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: .Label7:
Reading line: bgez r2, .Death
Reading line: bltz r2, .Label8
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Death:
Reading line: lbi r6, -1  // Should never make it here
Reading line: halt
Reading line: halt
Reading line: 
Reading line: .Label9:
Reading line: addi r6, r6, 4     // r6 = 0x0006
Reading line: 
Reading line: // WE MADE IT!
Reading line: halt
Reading line: // We should have:
Reading line: //     r0 = 0x0000
Reading line: //     r1 = 0x0001
Reading line: //     r2 = 0xffff
Reading line: //     r3 = .Label3-9
Reading line: //     r4 = .Label4-100
Reading line: //     r5 = .RetAddr+.RetAddr2
Reading line: //     r6 = 0x0006
Reading line: //     r7 = 0x0055
Reading line: 
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
Reading line: halt
@0
c0
00
90
4e
c7
ff
c6
00
20
0a
00
00
00
00
00
00
00
00
00
00
47
20
30
02
00
00
47
a0
40
77
3b
09
9e
21
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
c0
00
c1
01
c2
ff
60
2c
00
00
00
00
00
00
00
00
71
40
61
3e
78
42
00
00
00
00
00
00
c4
00
94
32
c0
9c
dc
10
dd
f4
c7
55
2c
64
47
ef
00
00
00
00
00
00
00
00
68
1c
46
c2
69
04
00
00
00
00
6a
0a
00
00
00
00
00
00
00
00
00
00
7a
06
72
c2
00
00
00
00
c6
ff
00
00
00
00
46
c4
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
